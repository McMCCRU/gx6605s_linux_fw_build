flash_size    0x400000
block_size    0x010000
#write_protect true
crc32         true

# 1) NAME field:
#	"BOOT"   : gxloader
#	"TABLE"  : partition table
#	"LOGO"   : gxloader show logo
#	"KERNEL" : application program
#	"ROOT"   : root file system
#
# 2) The FS field have these types:
#           "RAW": self definition file system type;
#           "CRAMFS":  cram_file_system type;
#           "MINIFS":  mini_file_system type;
# 3) The partition have 2 mode "ro" and "rw":
#           "ro": means that this partition could not been modified at runtime;
#           "rw": means that this partition could modify at runtime
# 4) UPDATE:
# 	0: don't update
# 	1: always update
# 	2: auto update, while version > old version
# 	3: clear partition data
#
# 5) VERSION 0 - 65535 (0x0000 - 0xFFFF)
# 6) The size of "auto" means the size of partition is determined by source file size, but for
#    the final partition (example "DATA") it means the size is last to the end of flash.
#
## NOTE:
#
# 1) The size of source file could not exceed the max size of partition.
# 2) The start addr of "BOOT" and "LOGO" should never be modified whenever you are
#    modifying this file (configure file) or running a program.
# 3) The 1K bytes blank befor the "LOGO" partition is reserved for partition table,
#    so do not use these space.
# 4)
#
# NAME  FILE                    CRC     FS      MODE    UPDATE VERSION  ADDRESS   SIZE
#-------------------------------------------------------------------------------------------
BOOT    loader-flash.bin       false   RAW     ro      0      0        0x000000  auto
TABLE   NULL                   true    RAW     ro      2      1        0x010000  64k
KERNEL  uImage                 true    RAW     ro      1      1        0x020000  auto
ROOTFS  rootfs.bin             true    CRAMFS  ro      1      1        auto      auto
DATA    minifs.bin             false   MINIFS  rw      0      0        0x3c0000  auto
